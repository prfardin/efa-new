//
// Component: Inverse
//
// ========================================================================

// Variables
// ========================================================================

@inverse-global-color-mode:                       light;

@inverse-global-color:                            var(--inverse-global-color);
@inverse-global-emphasis-color:                   var(--inverse-global-emphasis-color);
@inverse-global-muted-color:                      var(--inverse-global-muted-color);
@inverse-global-inverse-color:                    var(--inverse-global-inverse-color);
@inverse-global-secondary-background:             var(--inverse-global-secondary-background);

@inverse-global-primary-background:               var(--inverse-global-primary-background);
@inverse-global-muted-background:                 var(--inverse-global-muted-background);

@inverse-global-border:                           var(--inverse-global-border);

@inverse-global-icon-primary-color:               var(--inverse-global-icon-primary-color);
@inverse-global-icon-secondary-color:             var(--inverse-global-icon-secondary-color);
@inverse-global-icon-tertiary-color:              var(--inverse-global-icon-tertiary-color);
@inverse-global-icon-quaternary-color:            var(--inverse-global-icon-quaternary-color);

@global-icon-primary-color-light:                 var(--global-icon-primary-color-light);
@global-icon-secondary-color-light:               var(--global-icon-secondary-color-light);
@global-icon-tertiary-color-light:                var(--global-icon-tertiary-color-light);
@global-icon-quaternary-color-light:              var(--global-icon-quaternary-color-light);

@global-icon-primary-color-muted:                 var(--global-icon-primary-color-muted);
@global-icon-secondary-color-muted:               var(--global-icon-secondary-color-muted);
@global-icon-tertiary-color-muted:                var(--global-icon-tertiary-color-muted);
@global-icon-quaternary-color-muted:              var(--global-icon-quaternary-color-muted);


/* ========================================================================
   Component: Inverse
 ========================================================================== */

/*
 * Implemented class depends on the general theme color
 * `uk-light` is for light colors on dark backgrounds
 * `uk-dark` is or dark colors on light backgrounds
 */

.pr-light when (@inverse-global-color-mode = light) {
  .hook-pr-inverse();
}

.pr-dark when (@inverse-global-color-mode = dark) {
  .hook-pr-inverse();
}

// Hooks
// ========================================================================

.hook-inverse() {
}

.hook-pr-inverse() {
}